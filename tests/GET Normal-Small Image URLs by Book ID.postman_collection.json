{
	"info": {
		"_postman_id": "1a0156fe-82a6-43b2-95f7-67a31d1f2b87",
		"name": "GET Normal/Small Image URLs by Book ID",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43705288",
		"_collection_link": "https://jacob-7976102.postman.co/workspace/Jacob's-Workspace~3d76766f-3710-45b4-84f1-729857820d3e/collection/43705288-1a0156fe-82a6-43b2-95f7-67a31d1f2b87?action=share&source=collection_link&creator=43705288"
	},
	"item": [
		{
			"name": "GET Normal Image URL by Book ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// real book IDs (anything upto 9200ish)\r",
							"const bookIds = [\r",
							"    \"345\", \"465\", \"2134\", \"4576\", \"2134\", \r",
							"    \"7562\", \"1\", \"9000\", \"3856\", \"1089\"\r",
							"];\r",
							"\r",
							"const randIdx = Math.floor(Math.random() * bookIds.length);\r",
							"pm.environment.set(\"bookId\", bookIds[randIdx]);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Image field exists and is a valid URL\", () => {\r",
							"  pm.expect(response).to.have.property(\"image\");\r",
							"  pm.expect(response.image).to.match(/^https?:\\/\\/.+\\..+/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjo2MCwiaWF0IjoxNzQ2NjcwNzkzLCJleHAiOjE3NDc4ODAzOTN9.EIe_z-ojMU30Fy5siI4m5wRE_s9y9lEhQtuZjXLFMNM",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/closed/books/{{bookId}}/image",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"closed",
						"books",
						"{{bookId}}",
						"image"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Small Image URL by Book ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Small image field exists and is a valid URL\", () => {\r",
							"  pm.expect(response).to.have.property(\"image\");\r",
							"  pm.expect(response.image).to.match(/^https?:\\/\\/.+\\..+/);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// real book IDs (anything upto 9200ish)\r",
							"const bookIds = [\r",
							"    \"345\", \"465\", \"2134\", \"4576\", \"2134\", \r",
							"    \"7562\", \"1\", \"9000\", \"3856\", \"1089\"\r",
							"];\r",
							"\r",
							"const randIdx = Math.floor(Math.random() * bookIds.length);\r",
							"pm.environment.set(\"bookId\", bookIds[randIdx]);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjo2MCwiaWF0IjoxNzQ2NjcwNzkzLCJleHAiOjE3NDc4ODAzOTN9.EIe_z-ojMU30Fy5siI4m5wRE_s9y9lEhQtuZjXLFMNM",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/closed/books/{{bookId}}/small-image",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"closed",
						"books",
						"{{bookId}}",
						"small-image"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Book ID (400) - Normal",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"bookId\", \"invalid\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 400\", () => {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message for invalid ID\", () => {\r",
							"  pm.expect(response).to.have.property(\"error\");\r",
							"  pm.expect(response.error).to.include(\"Invalid book ID\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjo2MCwiaWF0IjoxNzQ2NjcwNzkzLCJleHAiOjE3NDc4ODAzOTN9.EIe_z-ojMU30Fy5siI4m5wRE_s9y9lEhQtuZjXLFMNM",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/closed/books/{{bookId}}/image",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"closed",
						"books",
						"{{bookId}}",
						"image"
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Book ID (400) - Small",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"bookId\", \"NaN\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 400\", () => {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Error message for invalid book ID\", () => {\r",
							"  pm.expect(response).to.have.property(\"error\");\r",
							"  pm.expect(response.error).to.include(\"Invalid book ID\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiMSIsImlkIjo2MCwiaWF0IjoxNzQ2NjcwNzkzLCJleHAiOjE3NDc4ODAzOTN9.EIe_z-ojMU30Fy5siI4m5wRE_s9y9lEhQtuZjXLFMNM",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/closed/books/{{bookId}}/small-image",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"closed",
						"books",
						"{{bookId}}",
						"small-image"
					]
				}
			},
			"response": []
		}
	]
}